---
- name: Ensure specified users are present
  ansible.builtin.user:
    append: true
    comment: "{{ item.comment | default(omit) }}"
    create_home: "{{ item.create_home | default(omit) }}"
    generate_ssh_key: "{{ item.create_home | default(omit) }}"
    group: "{{ item.group | default(omit) }}"
    groups: "{{ item.groups | default('') }}"
    home: "{{ item.home | default(omit) }}"
    name: "{{ item.name }}"
    password: "{{ item.password | default(omit) }}"
    shell: "{{ item.shell | default('/bin/bash') }}"
    uid: "{{ item.uid | default(omit) }}"

- name: Ensure SSH directory exists in user home directory
  ansible.builtin.file:
    path: "/home/{{ item.name }}/.ssh"
    state: directory
    owner: "{{ item.name }}"
    group: "{{ item.name }}"
    mode: "0700"
  when: item.ssh_public_key is defined or item.ssh_private_key is defined

- name: Ensure users authorized keys are present
  ansible.posix.authorized_key:
    user: "{{ item.name }}"
    state: present
    key: "{{ item.ssh_public_key }}"
  when: item.ssh_public_key is defined

- name: Ensure users private keys are present
  ansible.builtin.copy:
    content: "{{ item.ssh_private_key }}"
    dest: "/home/{{ item.name }}/.ssh/{{ item.ssh_private_key_name | default('id_rsa') }}"
    owner: "{{ item.name }}"
    group: "{{ item.name }}"
    mode: "0600"
  when: item.ssh_private_key is defined

- name: Ensure user accounts are password-less sudoers
  ansible.builtin.lineinfile:
    dest: /etc/sudoers
    regexp: '^{{ item.name }}'
    line: '{{ item.name }} ALL=(ALL) NOPASSWD: ALL'
    state: present
    validate: 'visudo -cf %s'
    mode: "0644"
  when: item.sudoers_nopassword is defined and item.sudoers_nopassword

- name: Ensure user accounts to password sudoers
  ansible.builtin.lineinfile:
    dest: /etc/sudoers
    regexp: '^{{ item.name }}'
    line: '{{ item.name }} ALL=(ALL) ALL'
    state: present
    validate: 'visudo -cf %s'
    mode: "0644"
  when: item.sudoers_password is defined and item.sudoers_password
